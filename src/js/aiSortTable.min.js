/* *
 * aiSortTable - Simple JavaScript table sorting.
 * alexanderkx: https://github.com/alexanderkx
 * repo: https://github.com/alexanderkx/aiSortTable
 *
 */

var aiSortTable=function(){var t=function(t,a,i){for(var o=t.getElementsByTagName("th"),s=t.querySelectorAll("tbody")[0],l=0;l<a.length;l++){var c=o[a[l]];c.dataset.col=a[l],c.classList.add("ai_th_sortable","ai_th_sortable__up"),c.addEventListener("click",function(){e(this),n(this,s),i(this)})}r(s,a)},e=function(t){t.classList.toggle("ai_th_sortable__down"),t.classList.toggle("ai_th_sortable__up")},r=function(t,e){for(var r=t.querySelectorAll("tr"),a=0;a<e.length;a++)for(var n=0;n<r.length;n++){var i=r[n].getElementsByTagName("td")[e[a]];i.classList.add("ai_td","ai_td_sorter_"+e[a]),r[n].classList.add("ai_tr_root")}},a=function(t){return/^-?[\d.]+(?:e-?\d+)?$/.test(t)},n=function(t,e){for(var r=e.querySelectorAll(".ai_td"),n=0;n<r.length;n++)r[n].classList.remove("ai_td_active");var i=0;0!==t&&(i=t.dataset.col);var o=document.querySelectorAll(".ai_td_sorter_"+i),s=[].slice.call(o);s.sort(function(e,r){var n="",i="";return a(e.innerHTML)?(n=+e.innerHTML,i=+r.innerHTML):(n=e.innerHTML,i=r.innerHTML),t.classList.contains("ai_th_sortable__down")?n>i:i>n});for(var l=0;l<s.length;l++)s[l].parentNode.dataset.aisorter=l,s[l].classList.add("ai_td_active");var c=document.querySelectorAll(".ai_tr_root"),_=[].slice.call(c);_.sort(function(t,e){return t.dataset.aisorter-e.dataset.aisorter}),e.innerHTML="";for(var d=0;d<_.length;d++)e.innerHTML+=_[d].outerHTML};return{init:function(e,r,a){e=document.getElementById(e),t(e,r,a)}}}();